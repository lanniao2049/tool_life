oracle卸载
	……\product\11.2.0\dbhome_1\deinstall\deinstall.bat，使用该脚本卸载oracle
安装成功后验证（下面方式任选一种）
	使用oracle SQL plus(dos)工具验证，输入用户名和密码(system/sys用户)，登录上select * from v$version;
	使用Database Control(url网站)，使用sys用户以DBA权限登录
	
系统用户	
	sys,system，默认密码是安装的密码，权限sys>system
	sysman,默认密码是安装的密码，企业管理器
	scott,默认密码是tiger
	登录用户：
	system/Admin1234
	sys/Admin1234 as sysdba(sysoper),sys必须以为sysdba或者sysoper权限登录
	scott/tiger@orcl(或者orcl数据库服务器的配置地址)
	登录上可以使用connnect sys/Admin1234 as sysdba连接新的用户

用户查询
	登录上用户后使用show user查询；
	desc dba_users;---查询数据字典dba_users的表信息，必须使用dba用户
	select username from dba_users;---查询系统的所用用户
启用scott用户
	使用dba用户登录后,alter user scott(username，各类用户) account unlock(lock锁定用户);
	alter user scott account unlock;
表空间
	分类：
	永久表空间，表、视图等
	临时表空间，操作步骤，临时数据等
	UNDO表空间，事务，操作前的步骤，可用于数据回滚等
	查询表空间：
	dba_tablespaces,dba表空间
	user_tablespaces,普通用户表空间
	select tablespace_name from user_tablespaces;
	dba_users,dba用户
	user_users,普通用户
	select username from user_users;
	select default_tablespace,temporary_tablespace from dba_users where username='SCOTT';
	修改默认表空间(只有dba才有权限)：
	alter user username default(temporary) tablespace xxx;
	alter user system default tablespace system;
	alter user scott default tablespace users;
	创建表空间：
	create [temporary] tablespace xx tempfile/datafile 'xxx.dbf' size xx;
	create tablespace test1_file datafile 'test1file.dbf' size 10m;
	create temporary tablespace test1_tempfile tempfile 'temptest1file.dbf' size 10m;
	查询创建表空间
	desc dba_data_files;
	desc dba_temp_files;
	select file_name from dba_data_files where tablespace_name='TEST1_FILE';
	select file_name from dba_temp_files where tablespace_name='TEST1_TEMPFILE';
	修改表空间状态
	alter tablespace xxx online/offline;--创建表空间默认online状态(read write)
	alter tablespace test1_file offline;
	alter tablespace test1_file read only;---必须是online状态下才可以使用
	alter tablespace test1_file read write;--也就是online状态
	查询表空间状态
	desc dba_tablespaces;
	select status from dba_tablespaces where tablespace_name='TEST1_FILE';
	表空间追加文件
	alter tablespace test1_file add datafile 'test2_file.dbf' size 10m;
	alter tablespace test1_tempfile add tempfile 'test2_temp.dbf' size 10m;
	表空间删除文件
	alter tablespace test1_tempfile drop tempfile 'test2_temp.dbf';
	alter tablespace test1_file drop datafile 'test2_file.dbf';
	删除表空间
	drop tablespace xxx [including contents][and datafiles];
	drop tablespace test1_tempfile;
	drop tablespace test1_file including contents;
	drop tablespace test1_file including contents and datafiles;
	
表的管理	
	字段类型
		字符串、日期、数字、其他
		char(最大2000),nchar(最大1000,unicode,汉字)，固定长度
		varchar2,nvarchar2，可变长度
		number(m,n)，m位，n表示小数后尾数
		date
		timestamp
		blob，二进制
		clob，字符串
	表的创建
		create table student(
		id number(6,0),
		name varchar2(20),
		address varchar2(50),
		birthday date
		)
		----
		desc student
	表的修改
		新增字段
		alter table student add remark varchar2(100);
		修改字段长度或者类型
		alter table student modify remark varchar2(500);
		alter table student modify remark nvarchar2(500);
		删除字段
		alter table student drop column remark;
		重命名字段名称
		alter table student rename column name to new_name;
		重命名表名称
		rename student to new_student;
		删除表 
		truncate table student;
		drop table student;
表的操作
	表数据的插入
	insert into student values(1,'rose','Beijing',sysdate);
	insert into student(id,name,address) values(2,'lose','Newyark');
	表数据的复制
	create table new_stu as select * from student;
	create table new_stu as select id,name,address from student where ……;
	insert into student select * from xxx;
	insert into student select id,name from xxx where ……;
	表数据的更新
	update student set name=xx,address=xx;
	update student set name=xxx where ……;
	表数据的查询
	
	表数据的删除
	delete from student;
	delete from student where ……;
表的约束
	非空约束
	create table t1(
	id number(5,0),
	name varchar2(20) not null;
	)
	alter table t1 modify namenot null;
	alter table t1 modify name null;
	唯一约束
		create table s1(
		id number(5,0) unique,
		name varchar2(20));
		
		create table s2(
		id number(5,0) primary key,
		name varchar2(20),
		constraint pk_s1 unique(name)
		);
		
		alter table s1 add constraint pk_s11 unique(name);
		alter table s2 disable constraint pk_s11;
		alter table s2 enable constraint pk_s11;
		alter table s2 drop constraint pk_s11;
		
		//插入唯一约束，可以插入多条null
		insert into s1 values(1,'Tom');
		insert into s1 values(2,'Rose');
		insert into s1 values(3,null);
		insert into s1 values(4,null);
	主键约束
	create table t1(
	id number(5,0) primary key,
	name varchar2(20)
	);
	
	create table t1(
	id number(5,0),
	name varchar2(20),
	constraint pk_id_name primary key(id,name)
	);
	
	desc user_constraints;--约束字典
	select constraint_name,constraint_type from user_constraints where table_name='T1';
	alter table t1 drop primary key;--删除主键约束
	alter table t1 add constraint pk_id primary key(id);
	alter table t1 drop constraint pk_id_name;--删除主键约束
	alter table t1 rename constraint pk_id to pk_id_new;--修改主键名称
	外键约束
		外键依赖的主表字段必须是primary key或者unique且not null
		create table class(
		id number(5,0) primary key,
		name varchar2(20)
		);
		列创建约束
		create table st1(
		id number(5,0) primary key,
		name varchar2(20),
		cid number(5,0) references class(id)
		);
		
		表创建约束
		create table st2(
		id number(5,0) primary key,
		name varchar2(20) not null,
		cid number(5,0),
		constraint fk_class foreign key(cid) references class(id)
		);
		//新增数据
		insert into class values(1,'A++');
		insert into class values(2,'A');
		insert into class values(3,'B++');
		
		insert into st2(101,'Rose',1);
		insert into st2(102,'Lucy',2);
		insert into st2(103,'Kit',null);
		insert into st2(104,'Tom',null);
		修改新增约束
		alter table st2 add constraint fk_class foreign key(cid) references class(id);
		alter table st2 add constraint fk_class foreign key(cid) references class(id) on delete cascade;
		删除约束
		alter table st2 disable constraint fk_class;
		alter table st2 enable constraint fk_class;
		alter table st2 drop constraint fk_class;
	
	检查约束
		create table w1(
		id number(5,0) primary key,
		name varchar2(20),
		age number(2,0) check(age>0 and age<=120)
		);
		
		create table w2(
		id number(5,0) primary key,
		sal number(5,0),
		constraint chk_w2 check(sal>0)
		);c
		
		alter table w2 add constraint chk_w2 check(sal>1000);
		
		alter table w2 disable constraint chk_w2;
		alter table w2 enable constraint chk_w2;
		alter table w2 drop constraint chk_w2;
		
设置sqlplus
	col column_name heading new_columnname;
	col id heading 编号;
	col id formart 999;---数字以9开头，三位，例如:99999.99
	col name formart a10;---字符串以a开头
	col name clear;--清除设置
	---除了使用col xx heading xx外查询语句还可以使用as 别名
	
查询 
	select * from xx;
	select a,b,c from xxx;
	select a,b,c from xxx where ……;
	select * from xxx where a like '_a%';
	select * from xxx where a bettwent 1000 and 2000;
	select * from xxx where a in(100,200,300);
	select distinct(a) from xxx;
	select * from xxx order by sal,name desc;
	
	case使用
	select id,name,case when sal>100000 then 'A+++'
	when sal>20000 and sal<100000 then 'A'
	else 'D' end lv from person;
	decode使用
	select id,decode(name,'Rose','usa','Toe','english','other'),sal from person;
	
oracle函数
	数值函数
		四舍五入函数round(n,m),m表示小数点后几位，m位负值表示小数点前几位
		select round(23.45),round(23.45,1),round(23.45,-1),round(123.45,-2) from dual;
		取整函数ceil(),floor();
		select ceil(23.45),floor(23.45) from dual;
		绝对值函数abs()
		select abs(123.45),abs（-1234),abs(null) from dual;
		mod(m,n)
		select mod(10,5),mod(11,3),mod(null,2),mod(2,null) from dual;
		power(m,n)
		select power(2,3),power(5,3),power(2,null),power(null,2) from dual;
		sqrt(n)
		select sqrt(16),sqrt(null),sqrt(100) from dual;
		sin(),asin(),cos(),acos(),tan(),atan()
		select sin(2),asin(1) from dual;
		
	字符函数
		upper(),lower(),initcap()
		select upper('abcde'),lower('AbCDeF'),initcap('abcdef') from dual;
		substr(char,m,n),substr(char,m)
		select substr('abcdef',2,2),substr('wftsl',1),substr('hello',0),substr('world',-1),substr('world',-2,2) from dual;
		length(char),concat(m,n)
		select length('abcd '),concat('bejing','-china') from dual;
		trim(c2 from c1),ltrim(c2,c1),rtrim(c2,c1),trim(char),ltrim(),rtrim()
		select trim('a' from 'abcdef') from dual;--特别要主要trim只能截取一个字符
		select ltrim('abcdf','abc'),rtrim('abcdef','def') from dual;
		select trim(' abc '),ltrim(' a bc'),rtrim(' a b c ') from dual;
		replace(char,m,n)
		select replace('hello world','he','He'),replace('新东方教育','新东方','蓝鸟') from dual;
	日期函数
		sysdate,add_months(date,i),next_day(date,char),last_day(date)
		moths_between(date1,date2)
		extract(date from timestamp)
		select sysdate,add_months(sysdate,6),add_months(sysdate,-12) from dual;
		select next_day(sysdate,'星期一'),last_day(sysdate) from dual;
		select months_between(sysdate,'01-9月 2025') from dual;
		select extract(month from sysdate),extract(day from sysdate) from dual;
	转换函数
		日期转换字符
		to_char
		select to_char(sysdate,'YYYY-MM-DD HH24:MI:SS') from dual;
		select to_char(sysdate,'YYYY-MM-DD HH12:MI:SS') from dual;
		字符转换日期
		to_date
		select to_date('2021/06/30','YYYY-MM-DD') from dual;
		数字转换字符
		to_char
		select to_char(68000.55,'$999,999.999') from dual;
		select to_char(120000.55,'S999,999.999') from dual;
		
		字符转换数字
		to_number()
		select to_number('$68000.550','$999999.999') from dual;
	
清理屏幕
	host cls;
	ed  编辑
	/ 执行上一个语句
	set linesize 100;
	set pagesize 100;
高级查询,使用scott用户
	分组函数
		avg(),max(),min(),sum(),count(),wm_concat()
		select avg(sal),max(sal),min(sal),sum(sal),count(sal);
		select deptno, wm_concat(ename) from emp group by deptno;
		select count(*),count(comm) from emp;
		分组函数自动忽略null
		select sum(comm)/count(*) t1,sum(comm)/count(comm) t2,avg(comm) t3 from emp;
		使用nvl设置comm为null的情况，nvl(comm,0)
		select sum(comm)/count(*) t1,sum(comm)/count(nvl(comm,0)) t2,avg(nvl(comm,0)) t3 from emp;
	group by 
		select deptno,avg(sal),avg(comm) from emp group by deptno;
		select avg(sal),avg(comm) from emp group by deptno;
		select deptno,job,avg(sal),sum(sal) from emp group by deptno,job order by deptno,job;
	having
		select deptno,avg(sal) from emp group by deptno having avg(sal)>2000;
	order by 
		select deptno,job,avg(sal),sum(sal) from emp group by deptno,job order by deptno,job;
		select deptno,job,avg(sal),sum(sal) from emp group by deptno,job order by deptno desc,job;
		select deptno,avg(sal) from emp group by deptno order by deptno;
	分组函数增强
		select deptno,job,sum(sal) from emp group by rollup(deptno,job);
		--相同的数据不显示
		break on deptno skip 2;
	报表功能
		--脚本，以下脚本单独写在report.sql文件中
		ttitle col 15 '我的报表' col 35 sql.pno
		col deptno heading 部门
		col job heading 职位
		col sum(sal) heading 总工资
		break on deptno skip 1
		
		在sqlplus dos命令中执行以下操作
		get C:\Users\Administrator\Desktop\report.sql
		然后执行脚本
		@C:\Users\Administrator\Desktop\report.sql
		
		select deptno,job,sum(sal) from emp group by rollup(deptno,job);
多表连接查询
		select x,x,x from a,b;
		select x,x,x from a join b on a.x=b.x;
		
	oracle 自连接有点缺点
		缺点：如果数据量过大，效率很慢，笛卡尔积很大
		
		select e1.ename,e2.ename  from emp e1,emp e2 where e1.mgr=e2.empno;
		
		select e1.ename,e2.ename  from emp e1,emp e2 where e1.mgr=e2.empno 
		union select ename,'boss' from emp where mgr is null;
	使用层次查询
		树的深度:level，伪列
		表示prior放在connect by子句连接条件里的哪一边，哪一边就是父节点的编号值的来源，而connect by子句连接条件里等号另一边就是记录一数据行其对应的父节点的编号值
		select level,ename,sal,mgr from emp connect by prior empno=mgr start with mgr is null order by level;
		
		
	    自连接和层次查询的优缺点
			自连接：查看信息比较直观，但是不适合大数据查询，笛卡尔积很大
			层次查询：查询信息不直观，但是是单表查询
子查询		
	行号永远是按照默认顺序生成的,临时表 
	rownum，伪列，行号只能使用<,<=不能使用>,>=
	select rownum,empno,ename,sal from emp;
	select rownum,empno,ename,sal from emp order by sal desc;
	求工资最高的三条记录
	select rownum,ename,sal from (select * from emp order by sal desc);
	select rownum,ename,sal from (select * from emp order by sal desc) where rownum<=3;
	
	找到员工表中薪水大于本部门平均薪水的员工
	select ename,sal, (select avg(sal) from emp where deptno=e.deptno) sal_avg from emp e where e.sal >(select avg(sal) from emp where deptno=e.deptno);
	
	多行子查询
	select empno,ename,sal from emp where sal > any(select sal from emp where deptno=30);
	
	select empno,ename,sal from emp where sal > (select min(sal) from emp where deptno=30);
	
	select empno,ename,sal from emp where sal > (select max(sal) from emp where deptno=30);
	
	select empno,ename,sal from emp where sal > all(select sal from emp where deptno=30);
	
	老板的员工
	select * from emp where empno in(select mgr from emp);
	不是老板的员工，一定要注意not null里面的值不能有null的情况，否则都查询不到数据
	select * from emp where empno not in(select mgr from emp where mgr is not null);
	
	
高级查询案例
		案例一：分页查询显示员工信息：显示员工号，姓名，月薪
		--每页显示四条记录
		--显示第二页的员工
		--按照月薪降序排列
		select r,empno,ename,sal from (select rownum r,empno,ename,sal from (select empno,ename,sal from emp order by sal desc) where rownum<=8) where r>=5;
		
		案例二：找到员工表中薪水大于本部门平均薪水的员工
		方案1：
			select ename,sal, (select avg(sal) from emp where deptno=e.deptno) sal_avg from emp e where sal>(select avg(sal) from emp where deptno=e.deptno);
		方案2：
			select t1.ename,t1.sal,t2.sal_avg from emp t1 join (select deptno,avg(sal) sal_avg from emp group by deptno) t2 on t1.deptno=t2.deptno where t1.sal>t2.sal_avg;
		查询执行计划看看那个效率高
		explain plan for 
		………………;
		select * from table(dbms_xplan_display);
		案例三：按部门统计员工人数，按照如下格式输出：
		total 1980 1981 1982 1987
		14     1   10    1    2
		注意：员工的入账年份已知
		方案1：
		select count(*) total,
		sum(decode(to_char(hiredate,'YYYY'),'1980',1,0)) "1980",
		sum(decode(to_char(hiredate,'YYYY'),'1981',1,0)) "1981",
		sum(decode(to_char(hiredate,'YYYY'),'1982',1,0)) "1982",
		sum(decode(to_char(hiredate,'YYYY'),'1987',1,0)) "1987"
		from emp;
		方案2：
		select 
		(select count(*) from emp) total,
		(select count(*) from emp where to_char(hiredate,'YYYY')='1980') "1980",
		(select count(*) from emp where to_char(hiredate,'YYYY')='1981') "1981",
		(select count(*) from emp where to_char(hiredate,'YYYY')='1982') "1982",
		(select count(*) from emp where to_char(hiredate,'YYYY')='1987') "1987"
		from dual;